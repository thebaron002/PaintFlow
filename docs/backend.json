{
  "entities": {
    "Subcontractor": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subcontractor",
      "type": "object",
      "description": "Represents a subcontractor working on jobs.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Subcontractor entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the subcontractor."
        },
        "contactNumber": {
          "type": "string",
          "description": "The contact phone number of the subcontractor."
        },
        "email": {
          "type": "string",
          "description": "The email address of the subcontractor.",
          "format": "email"
        },
        "skills": {
          "type": "string",
          "description": "Description of the subcontractors skills."
        }
      },
      "required": [
        "id",
        "name",
        "contactNumber"
      ]
    },
    "Job": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Job",
      "type": "object",
      "description": "Represents a job assigned to subcontractors.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Job entity."
        },
        "title": {
          "type": "string",
          "description": "The title or name of the job."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the job requirements."
        },
        "deadline": {
          "type": "string",
          "description": "The deadline for completing the job.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "The location or address of the job site."
        },
        "subcontractorId": {
          "type": "string",
          "description": "Reference to Subcontractor. (Relationship: Subcontractor 1:N Job)"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "deadline",
        "location",
        "subcontractorId"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense associated with a job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Expense entity."
        },
        "jobId": {
          "type": "string",
          "description": "Reference to Job. (Relationship: Job 1:N Expense)"
        },
        "category": {
          "type": "string",
          "description": "The category of the expense (e.g., materials, labor, transportation)."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "date": {
          "type": "string",
          "description": "The date when the expense was incurred.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the expense."
        }
      },
      "required": [
        "id",
        "jobId",
        "category",
        "amount",
        "date"
      ]
    },
    "CashFlow": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CashFlow",
      "type": "object",
      "description": "Represents cash flow related to a job (income or expense).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CashFlow entity."
        },
        "jobId": {
          "type": "string",
          "description": "Reference to Job. (Relationship: Job 1:N CashFlow)"
        },
        "type": {
          "type": "string",
          "description": "The type of cash flow (income or expense)."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the cash flow."
        },
        "date": {
          "type": "string",
          "description": "The date of the cash flow transaction.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the cash flow event."
        }
      },
      "required": [
        "id",
        "jobId",
        "type",
        "amount",
        "date"
      ]
    },
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user of the application. Stores basic profile information obtained from Google Sign-In.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity.  This could be the Google user ID."
        },
        "email": {
          "type": "string",
          "description": "The user's email address obtained from Google Sign-In.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's name obtained from Google Sign-In."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL of the user's profile picture obtained from Google Sign-In.",
          "format": "uri"
        },
        "phone": {
          "type": "string",
          "description": "The user's phone number."
        },
        "businessName": {
          "type": "string",
          "description": "The name of the user's business."
        },
        "businessLogoUrl": {
          "type": "string",
          "description": "URL of the user's business logo.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "auth": {
    "providers": [
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information obtained from Google Sign-In.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/subcontractors/{subcontractorId}",
        "definition": {
          "entityName": "Subcontractor",
          "schema": {
            "$ref": "#/backend/entities/Subcontractor"
          },
          "description": "Stores subcontractor information.",
          "params": [
            {
              "name": "subcontractorId",
              "description": "The unique identifier for the subcontractor."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}",
        "definition": {
          "entityName": "Job",
          "schema": {
            "$ref": "#/backend/entities/Job"
          },
          "description": "Stores job data assigned to subcontractors, owned by the user. Includes denormalized 'userId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (owner of the jobs)."
            },
            {
              "name": "jobId",
              "description": "The unique identifier for the job."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expenses associated with a specific job, owned by the user. Includes denormalized 'userId' and 'jobId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (owner of the job and expense)."
            },
            {
              "name": "jobId",
              "description": "The unique identifier for the job to which the expense belongs."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier for the expense."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}/cashFlow/{cashFlowId}",
        "definition": {
          "entityName": "CashFlow",
          "schema": {
            "$ref": "#/backend/entities/CashFlow"
          },
          "description": "Stores cash flow entries (income or expense) related to a specific job, owned by the user. Includes denormalized 'userId' and 'jobId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (owner of the job and cash flow)."
            },
            {
              "name": "jobId",
              "description": "The unique identifier for the job to which the cash flow belongs."
            },
            {
              "name": "cashFlowId",
              "description": "The unique identifier for the cash flow entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage subcontractors, jobs, expenses, and cash flow within the PaintFlow application. It prioritizes authorization independence and data clarity.\n\nThe core structure revolves around users and their associated data. Each user has their own collection of subcontractors, jobs, expenses, and cashflow entries, ensuring clear ownership and simplified security rules. Subcontractors are stored at the root level to manage the Subcontractor's list, while jobs, expenses and cashflow are located under users to ensure access control by user ID.\n\nAuthorization Independence is achieved by associating subcontractors with a user id. The user id must be present in each document in a subcollection. The proposed structure supports the QAPs as follows: Segregation is used by separating data with different access needs into different collections. For example, each user has their own set of 'jobs' under their user id, providing a clear segregation of data and enabling QAPs for listing jobs for each user. The path based ownership handles the job listing in a secure way."
  }
}
    