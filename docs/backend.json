
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user of the application. Stores basic profile information obtained from Google Sign-In, as well as business-specific details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity. This should be the Firebase Auth UID."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL of the user's profile picture.",
          "format": "uri"
        },
        "phone": {
          "type": "string",
          "description": "The user's phone number."
        },
        "businessName": {
          "type": "string",
          "description": "The name of the user's business."
        },
        "businessLogoUrl": {
          "type": "string",
          "description": "URL of the user's business logo.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "CrewMember": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CrewMember",
      "type": "object",
      "description": "Represents a crew member (subcontractor or partner) associated with a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CrewMember entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the crew member."
        },
        "type": {
          "type": "string",
          "enum": ["Helper", "Partner"],
          "description": "The type of crew member."
        },
        "dailyRate": {
          "type": "number",
          "description": "The daily rate for a 'Helper' type crew member."
        },
        "profitPercentage": {
          "type": "number",
          "description": "The profit percentage for a 'Partner' type crew member."
        },
        "email": {
          "type": "string",
          "description": "The email address of the crew member.",
          "format": "email"
        },
        "phone": {
          "type": "string",
          "description": "The contact phone number of the crew member."
        },
        "avatarUrl": {
          "type": "string",
          "description": "URL for the crew member's avatar image.",
          "format": "uri"
        }
      },
      "required": ["id", "name", "type"]
    },
    "Job": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Job",
      "type": "object",
      "description": "Represents a job managed by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Job entity."
        },
        "title": {
          "type": "string",
          "description": "The title or name of the job."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the job requirements."
        },
        "deadline": {
          "type": "string",
          "description": "The deadline for completing the job.",
          "format": "date-time"
        },
        "location": {
          "type": "string",
          "description": "The location or address of the job site."
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "deadline",
        "location"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense associated with a job.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Expense entity."
        },
        "category": {
          "type": "string",
          "description": "The category of the expense (e.g., materials, labor, transportation)."
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "date": {
          "type": "string",
          "description": "The date when the expense was incurred.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the expense."
        }
      },
      "required": [
        "id",
        "category",
        "amount",
        "date"
      ]
    },
    "CashFlow": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CashFlow",
      "type": "object",
      "description": "Represents cash flow related to a job (income or expense).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the CashFlow entity."
        },
        "type": {
          "type": "string",
          "description": "The type of cash flow (income or expense)."
        },
        "amount": {
          "type": "number",
          "description":."The amount of the cash flow."
        },
        "date": {
          "type": "string",
          "description": "The date of the cash flow transaction.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "A description of the cash flow event."
        }
      },
      "required": [
        "id",
        "type",
        "amount",
        "date"
      ]
    }
  },
  "auth": {
    "providers": [
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/entities/UserProfile"
          },
          "description": "Stores user profile information. Each user has their own document.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/crew/{crewMemberId}",
        "definition": {
          "entityName": "CrewMember",
          "schema": {
            "$ref": "#/entities/CrewMember"
          },
          "description": "Stores crew members (subcontractors, partners) associated with a specific user.",
          "params": [
            {
              "name": "userId",
              "description": "The user who owns this crew member data."
            },
            {
              "name": "crewMemberId",
              "description": "The unique identifier for the crew member."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}",
        "definition": {
          "entityName": "Job",
          "schema": {
            "$ref": "#/entities/Job"
          },
          "description": "Stores job data owned by the user.",
          "params": [
            {
              "name": "userId",
              "description": "The user who owns this job."
            },
            {
              "name": "jobId",
              "description": "The unique identifier for the job."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/entities/Expense"
          },
          "description": "Stores expenses associated with a specific job.",
          "params": [
            {
              "name": "userId",
              "description": "The user who owns the job."
            },
            {
              "name": "jobId",
              "description": "The job to which the expense belongs."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier for the expense."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/jobs/{jobId}/cashFlow/{cashFlowId}",
        "definition": {
          "entityName": "CashFlow",
          "schema": {
            "$ref": "#/entities/CashFlow"
          },
          "description": "Stores cash flow entries for a specific job.",
          "params": [
            {
              "name": "userId",
              "description": "The user who owns the job."
            },
            {
              "name": "jobId",
              "description": "The job to which the cash flow entry belongs."
            },
            {
              "name": "cashFlowId",
              "description": "The unique identifier for the cash flow entry."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed with a user-centric data model. All primary data collections (jobs, crew, etc.) are subcollections of a specific user's document in the top-level 'users' collection. This approach ensures strong data ownership and simplifies security rules, as access control is primarily based on verifying that the request's authenticated user ID matches the {userId} in the document path. This prevents users from accessing each other's data and provides a scalable, secure foundation for the application."
  }
}
