
{
  "entities": {
    "Client": {
      "title": "Client",
      "type": "object",
      "description": "Represents a client for whom a job is performed.",
      "properties": {
        "id": { "type": "string", "description": "Unique ID for the client." },
        "name": { "type": "string", "description": "Name of the client." },
        "phone": { "type": "string", "description": "Client's phone number." },
        "email": { "type": "string", "format": "email", "description": "Client's email address." },
        "avatarUrl": { "type": "string", "format": "uri", "description": "URL of the client's avatar image." }
      },
      "required": ["id", "name", "email"]
    },
    "Job": {
      "title": "Job",
      "type": "object",
      "description": "Represents a single job or project.",
      "properties": {
        "id": { "type": "string", "description": "Unique ID for the job." },
        "title": { "type": "string", "description": "Title of the job." },
        "workOrderNumber": { "type": "string", "description": "Work order number for the job." },
        "address": { "type": "string", "description": "Physical address where the job is located." },
        "clientId": { "type": "string", "description": "The ID of the client this job belongs to." },
        "startDate": { "type": "string", "format": "date-time", "description": "The start date of the job." },
        "deadline": { "type": "string", "format": "date-time", "description": "The deadline for the job." },
        "specialRequirements": { "type": "string", "description": "Any special requirements for the job." },
        "status": { "type": "string", "enum": ["Not Started", "In Progress", "Complete", "Open Payment", "Finalized"] },
        "budget": { "type": "number", "description": "The total payout/budget for the job." },
        "initialValue": { "type": "number" },
        "idealMaterialCost": { "type": "number" },
        "idealNumberOfDays": { "type": "number" },
        "productionDays": { "type": "array", "items": { "type": "string", "format": "date-time" } },
        "isFixedPay": { "type": "boolean" },
        "invoices": { 
          "type": "array", 
          "items": { 
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "amount": {"type": "number"},
              "date": {"type": "string", "format": "date-time"}
            }
          } 
        },
        "adjustments": { 
          "type": "array", 
          "items": { 
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "reason": {"type": "string"},
              "amount": {"type": "number"}
            }
          } 
        }
      },
      "required": ["id", "title", "address", "clientId", "deadline", "status", "budget"]
    },
    "Expense": {
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense associated with a job.",
      "properties": {
        "id": { "type": "string" },
        "jobId": { "type": "string" },
        "category": { "type": "string", "enum": ["Materials", "Labor", "Transportation", "Other"] },
        "description": { "type": "string" },
        "amount": { "type": "number" },
        "date": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "jobId", "category", "amount", "date"]
    },
    "Income": {
      "title": "Income",
      "type": "object",
      "description": "Represents an income payment associated with a job.",
      "properties": {
        "id": { "type": "string" },
        "jobId": { "type": "string" },
        "description": { "type": "string" },
        "amount": { "type": "number" },
        "date": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "jobId", "amount", "date"]
    }
  },
  "auth": {
    "providers": ["anonymous"]
  },
  "firestore": {
    "/clients/{clientId}": {
      "schema": { "$ref": "#/entities/Client" },
      "description": "Top-level collection to store all client documents."
    },
    "/jobs/{jobId}": {
      "schema": { "$ref": "#/entities/Job" },
      "description": "Top-level collection to store all job documents."
    },
    "/expenses/{expenseId}": {
      "schema": { "$ref": "#/entities/Expense" },
      "description": "Top-level collection to store all expense documents."
    },
    "/income/{incomeId}": {
      "schema": { "$ref": "#/entities/Income" },
      "description": "Top-level collection to store all income documents."
    }
  }
}
