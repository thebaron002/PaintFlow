/**
 * @fileoverview Firestore Security Rules for Prototyping.
 *
 * Core Philosophy:
 * This ruleset prioritizes rapid prototyping and development. All data is publicly readable and writable by anyone, authenticated or not.
 *
 * Data Structure:
 * The database consists of top-level collections for 'clients', 'jobs', 'expenses', and 'incomes'. There are no user-specific subcollections.
 *
 * Key Security Decisions:
 * - Authentication is optional (anonymous access enabled).
 * - No authorization checks are performed. All read and write operations are allowed for all users.
 *
 * WARNING:
 * This configuration provides ZERO security and should NEVER be used in a production environment. It is intended for local development and testing ONLY.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows all read and write operations to the 'clients' collection.
     * @path /databases/{database}/documents/clients/{clientId}
     * @allow (get, list) Any user can read any client document.
     * @allow (create, update, delete) Any user can create, update, or delete any client document.
     * @deny Never.
     * @principle Allows open access for prototyping.
     */
    match /clients/{clientId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations to the 'jobs' collection.
     * @path /databases/{database}/documents/jobs/{jobId}
     * @allow (get, list) Any user can read any job document.
     * @allow (create, update, delete) Any user can create, update, or delete any job document.
     * @deny Never.
     * @principle Allows open access for prototyping.
     */
    match /jobs/{jobId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations to the 'expenses' collection.
     * @path /databases/{database}/documents/expenses/{expenseId}
     * @allow (get, list) Any user can read any expense document.
     * @allow (create, update, delete) Any user can create, update, or delete any expense document.
     * @deny Never.
     * @principle Allows open access for prototyping.
     */
    match /expenses/{expenseId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations to the 'incomes' collection.
     * @path /databases/{database}/documents/incomes/{incomeId}
     * @allow (get, list) Any user can read any income document.
     * @allow (create, update, delete) Any user can create, update, or delete any income document.
     * @deny Never.
     * @principle Allows open access for prototyping.
     */
    match /incomes/{incomeId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}